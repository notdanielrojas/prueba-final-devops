name: Despliegue de aplicaciones

on:
  push:
    branches: [ main ]

jobs:
  snyk-security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Instalar Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk CLI
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Scan IAC code
        run: snyk iac test ./Terraform/** --severity-threshold=high

  deploy-terraform-app:
    runs-on: ubuntu-latest
    needs: snyk-security-scan
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.MY_AWS_REGION }}

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configurar credenciales de Terraform Cloud
        run: |
         mkdir -p ~/.terraform.d
         echo "{\"credentials\":{\"app.terraform.io\":{\"token\":\"${{ secrets.TERRAFORM_CLOUD_TOKEN }}\"}}}" > ~/.terraform.d/credentials.tfrc.json

      - name: Terraform Init
        run: terraform -chdir="./Terraform/" init

      - name: Terraform Plan
        run: terraform -chdir="./Terraform/" plan

      - name: Terraform Apply
        run: terraform -chdir="./Terraform/" apply -auto-approve

      - name: Obtener dirección IP pública del EC2
        id: output
        run: echo "::set-output name=public_ip::$(terraform -chdir='./Terraform/' output -raw ec2_public_ip)"

      - name: Copiar aplicación al EC2
        run: |
          scp -i /path/to/key.pem -r ./app ubuntu@${{ steps.output.outputs.public_ip }}:/home/ubuntu/app
          ssh -i /path/to/key.pem ubuntu@${{ steps.output.outputs.public_ip }} "cd /home/ubuntu/app && npm install && pm2 start npm --name 'landingpage-yossequiropractica' -- start"

  deploy-docker-app:
    runs-on: ubuntu-latest
    needs: deploy-terraform-app
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Listar archivos en el directorio raíz
        run: ls -la

      - name: Listar archivos del directorio Docker
        run: ls -la ./Docker

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.MY_AWS_REGION }}

      - name: Login a Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Crear repositorio ECR si no existe
        run: |
          aws ecr describe-repositories --repository-names ${{ secrets.ECR_REPOSITORY_DOCKER }} || \
          aws ecr create-repository --repository-name ${{ secrets.ECR_REPOSITORY_DOCKER }} --region ${{ secrets.MY_AWS_REGION }}

      - name: Build de la imagen Docker
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: ./Docker
          file: ./Docker/Dockerfile
          push: false
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_DOCKER }}:latest

      - name: Escaneo de la imagen Docker con Snyk
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_DOCKER }}:latest
          args: -d

      - name: Push de la imagen Docker
        if: ${{ success() }}
        uses: docker/build-push-action@v3
        with:
          context: ./Docker
          file: ./Docker/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_DOCKER }}:latest